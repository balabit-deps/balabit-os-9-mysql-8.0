From 11f940456f1072fe833fe40d4f86a14f3f301a1a Mon Sep 17 00:00:00 2001
From: Corey Bryant <corey.bryant@canonical.com>
Date: Fri, 27 Jan 2023 17:03:42 -0500
Subject: [PATCH 17/86] Revert "Bug#34801929 PREFERRED/AS_CLIENT with
 unix-socket leads to unencrypted tcp to server"

This reverts commit 26c27df6e993b5461a06b352f92ee7d4cfba351d.
---
 router/src/routing/src/classic_greeting.cc    | 15 ++++------
 .../tests/integration/test_routing_direct.cc  | 30 +++----------------
 2 files changed, 10 insertions(+), 35 deletions(-)

diff --git a/router/src/routing/src/classic_greeting.cc b/router/src/routing/src/classic_greeting.cc
index d7e48efc6db..7f4c158e3ce 100644
--- a/router/src/routing/src/classic_greeting.cc
+++ b/router/src/routing/src/classic_greeting.cc
@@ -1767,12 +1767,10 @@ ServerFirstAuthenticator::client_greeting() {
   auto *src_protocol = connection()->client_protocol();
   auto *dst_protocol = connection()->server_protocol();
 
-  const bool server_supports_tls = dst_protocol->server_capabilities().test(
+  bool server_supports_tls = dst_protocol->server_capabilities().test(
       classic_protocol::capabilities::pos::ssl);
-  const bool client_uses_tls = src_protocol->shared_capabilities().test(
+  bool client_uses_tls = src_protocol->shared_capabilities().test(
       classic_protocol::capabilities::pos::ssl);
-  const bool client_is_secure =
-      client_uses_tls || socket_splicer->client_conn().is_secure_transport();
 
   if (connection()->dest_ssl_mode() == SslMode::kAsClient && client_uses_tls &&
       !server_supports_tls) {
@@ -1810,13 +1808,12 @@ ServerFirstAuthenticator::client_greeting() {
       client_caps.set(classic_protocol::capabilities::pos::ssl);
       break;
     case SslMode::kAsClient:
-      if (connection()->source_ssl_mode() != SslMode::kPassthrough) {
-        // don't check caps on passthrough.
-        client_caps.set(classic_protocol::capabilities::pos::ssl,
-                        client_is_secure);
-      }
+      client_caps.set(classic_protocol::capabilities::pos::ssl,
+                      client_uses_tls);
       break;
     case SslMode::kPassthrough:
+      // don't check caps on passthrough.
+      break;
     case SslMode::kDefault:
       log_debug("dest_ssl_mode::Default ... should not happen.");
 
diff --git a/router/tests/integration/test_routing_direct.cc b/router/tests/integration/test_routing_direct.cc
index 0b0d6d19d4b..fc21d4fcd02 100644
--- a/router/tests/integration/test_routing_direct.cc
+++ b/router/tests/integration/test_routing_direct.cc
@@ -1360,33 +1360,11 @@ TEST_P(ConnectionTest, classic_protocol_native_over_socket) {
                                  shared_router()->socket_path(GetParam()));
   ASSERT_NO_ERROR(connect_res);
 
-  {
-    auto cmd_res = query_one_result(cli, "SELECT USER(), SCHEMA()");
-    ASSERT_NO_ERROR(cmd_res);
-
-    EXPECT_THAT(*cmd_res, ElementsAre(ElementsAre(
-                              account.username + "@localhost", "<NULL>")));
-  }
-
-  {
-    auto cmd_res = query_one_result(cli,
-                                    "SELECT VARIABLE_VALUE "
-                                    " FROM performance_schema.session_status "
-                                    "WHERE variable_name LIKE 'Ssl_cipher'");
-    ASSERT_NO_ERROR(cmd_res);
+  auto cmd_res = query_one_result(cli, "SELECT USER(), SCHEMA()");
+  ASSERT_NO_ERROR(cmd_res);
 
-    if (GetParam().server_ssl_mode == kPreferred ||
-        GetParam().server_ssl_mode == kRequired ||
-        (GetParam().server_ssl_mode == kAsClient &&
-         (GetParam().client_ssl_mode == kPreferred ||
-          GetParam().client_ssl_mode == kRequired))) {
-      // some cipher is set
-      EXPECT_THAT(*cmd_res, ElementsAre(ElementsAre(Not(IsEmpty()))));
-    } else {
-      // no cipher is set
-      EXPECT_THAT(*cmd_res, ElementsAre(ElementsAre(IsEmpty())));
-    }
-  }
+  EXPECT_THAT(*cmd_res, ElementsAre(ElementsAre(account.username + "@localhost",
+                                                "<NULL>")));
 }
 
 TEST_P(ConnectionTest, classic_protocol_change_user_native_over_socket) {
-- 
2.37.2


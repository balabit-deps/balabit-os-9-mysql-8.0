From 04e3f4d8b39e74c57b73008cf881c39092f25a36 Mon Sep 17 00:00:00 2001
From: Corey Bryant <corey.bryant@canonical.com>
Date: Fri, 27 Jan 2023 17:03:31 -0500
Subject: [PATCH 15/86] Revert "Bug #34827945 FetchWholeTopologyConnections
 fails randomly"

This reverts commit 9413d6582f1c84be78814e4d2f70bc32fed664ec.
---
 router/src/metadata_cache/src/cache_api.cc     | 2 --
 router/src/metadata_cache/src/metadata_cache.h | 2 +-
 router/tests/component/test_clusterset.cc      | 4 ++--
 3 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/router/src/metadata_cache/src/cache_api.cc b/router/src/metadata_cache/src/cache_api.cc
index 7af2a326850..a446acdf99a 100644
--- a/router/src/metadata_cache/src/cache_api.cc
+++ b/router/src/metadata_cache/src/cache_api.cc
@@ -290,8 +290,6 @@ bool MetadataCacheAPI::fetch_whole_topology() const {
 }
 
 void MetadataCacheAPI::fetch_whole_topology(bool val) {
-  LOCK_METADATA_AND_CHECK_INITIALIZED();
-
   g_metadata_cache->fetch_whole_topology(val);
 }
 
diff --git a/router/src/metadata_cache/src/metadata_cache.h b/router/src/metadata_cache/src/metadata_cache.h
index 515c9f1e4aa..eb0788d8ba2 100644
--- a/router/src/metadata_cache/src/metadata_cache.h
+++ b/router/src/metadata_cache/src/metadata_cache.h
@@ -390,7 +390,7 @@ class METADATA_CACHE_EXPORT MetadataCache
       std::chrono::steady_clock::now()};
 
   bool ready_announced_{false};
-  std::atomic<bool> fetch_whole_topology_{false};
+  bool fetch_whole_topology_{false};
 
   /**
    * Flag indicating if socket acceptors state should be updated on next
diff --git a/router/tests/component/test_clusterset.cc b/router/tests/component/test_clusterset.cc
index bffbb8d03d6..6dc8b47e05a 100644
--- a/router/tests/component/test_clusterset.cc
+++ b/router/tests/component/test_clusterset.cc
@@ -2406,7 +2406,7 @@ TEST_F(ClusterSetTest, FetchWholeTopologyConnections) {
   // switch the mode to fetch_whole_topology
   set_fetch_whole_topology(true);
   EXPECT_TRUE(wait_for_transaction_count_increase(
-      clusterset_data_.clusters[0].nodes[0].http_port, 3));
+      clusterset_data_.clusters[0].nodes[0].http_port, 2));
 
   // since now the nodes pool is the superset of the previous pool the existing
   // RO connections should still be alive
@@ -2457,7 +2457,7 @@ TEST_F(ClusterSetTest, FetchWholeTopologyConnections) {
   // switch off the mode fetch_whole_topology
   set_fetch_whole_topology(false);
   EXPECT_TRUE(wait_for_transaction_count_increase(
-      clusterset_data_.clusters[0].nodes[0].http_port, 3));
+      clusterset_data_.clusters[0].nodes[0].http_port, 2));
 
   // we are back in the "use only the target cluster" mode
   // the RW connection should be shut down
-- 
2.37.2


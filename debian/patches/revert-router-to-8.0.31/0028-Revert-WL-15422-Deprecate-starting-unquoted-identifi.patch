From 986db0bc98dec4f0d4e9d14441be570466116cc6 Mon Sep 17 00:00:00 2001
From: Corey Bryant <corey.bryant@canonical.com>
Date: Fri, 27 Jan 2023 17:05:15 -0500
Subject: [PATCH 28/86] Revert "WL#15422: Deprecate starting unquoted
 identifiers with a dollar sign"

This reverts commit 950eb143129f4ef4ae6e89bf5353a5e8600c3dc2.
---
 include/sql_chars.h                           |   1 -
 mysql-test/r/create.result                    |   6 +-
 mysql-test/r/dollar_identifier.result         | 148 ------------------
 mysql-test/r/opt_hints.result                 |   2 +-
 .../include/default_row_format_tablespace.inc |   6 +-
 .../r/default_row_format_tablespace.result    |  18 +--
 .../suite/innodb/r/virtual_basic.result       |   8 +-
 mysql-test/suite/innodb/t/virtual_basic.test  |   8 +-
 .../x/r/admin_create_index_spatial.result     |   2 +-
 mysql-test/suite/x/r/create_index_crud.result |   6 +-
 .../suite/x/r/performance_schema_stmt.result  |   2 +-
 .../suite/x/t/admin_create_index_spatial.test |   2 +-
 mysql-test/suite/x/t/create_index_crud.test   |   4 +-
 mysql-test/t/create.test                      |   6 +-
 mysql-test/t/dollar_identifier.test           | 101 ------------
 mysql-test/t/opt_hints.test                   |   2 +-
 mysys/sql_chars.cc                            |   3 -
 plugin/x/src/admin_cmd_collection_handler.cc  |   6 +-
 router/src/routing/src/sql_lexer.cc           |  17 +-
 router/src/routing/src/sql_lexer_error.h      |   3 -
 sql/sql_lex.cc                                |  18 +--
 sql/sql_show.cc                               |   3 -
 .../xpl/admin_modify_collection_options_t.cc  |   8 +-
 23 files changed, 49 insertions(+), 331 deletions(-)
 delete mode 100644 mysql-test/r/dollar_identifier.result
 delete mode 100644 mysql-test/t/dollar_identifier.test

diff --git a/include/sql_chars.h b/include/sql_chars.h
index 050863e5cbd..abe57e2e44a 100644
--- a/include/sql_chars.h
+++ b/include/sql_chars.h
@@ -66,7 +66,6 @@ enum MY_ATTRIBUTE((__packed__)) my_lex_states {
   MY_LEX_IDENT_OR_HEX,
   MY_LEX_IDENT_OR_BIN,
   MY_LEX_IDENT_OR_NCHAR,
-  MY_LEX_IDENT_OR_DOLLAR_QUOTE,
   MY_LEX_STRING_OR_DELIMITER
 };
 
diff --git a/mysql-test/r/create.result b/mysql-test/r/create.result
index b1b62eed5ac..7435e8343ba 100644
--- a/mysql-test/r/create.result
+++ b/mysql-test/r/create.result
@@ -83,9 +83,9 @@ drop database if exists mysqltest;
 Warnings:
 Note	1008	Can't drop database 'mysqltest'; database doesn't exist
 create database mysqltest;
-create table mysqltest.`$test1` (a$1 int, `$b` int, c$ int);
-insert into mysqltest.`$test1` values (1,2,3);
-select a$1, `$b`, c$ from mysqltest.`$test1`;
+create table mysqltest.$test1 (a$1 int, $b int, c$ int);
+insert into mysqltest.$test1 values (1,2,3);
+select a$1, $b, c$ from mysqltest.$test1;
 a$1	$b	c$
 1	2	3
 create table mysqltest.test2$ (a int);
diff --git a/mysql-test/r/dollar_identifier.result b/mysql-test/r/dollar_identifier.result
deleted file mode 100644
index 0fb35aa6335..00000000000
--- a/mysql-test/r/dollar_identifier.result
+++ /dev/null
@@ -1,148 +0,0 @@
-create table $t(id int);
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-drop table $t;
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-create table t(id int, $id int, $id2 int, $$id int, $ int, $1 int,$$$ int,
-id$$$ int, 1$ int, `$$` int, _$ int, b$$lit$$ int);
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-select `$1`, $$$,$$id, '$someli$teral' from t where t.`$id` = 0;
-$1	$$$	$$id	$someli$teral
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-SET sql_mode = sys.LIST_ADD(@@sql_mode, 'ANSI_QUOTES');
-select "$id2", "$$$" from t where t."$id" = 0;
-$id2	$$$
-SET sql_mode = sys.LIST_DROP(@@sql_mode, 'ANSI_QUOTES');
-select * from t where t.`$id` = 0 or `$id2` = 0 or b$$lit$$ = 0;
-id	$id	$id2	$$id	$	$1	$$$	id$$$	1$	$$	_$	b$$lit$$
-select id+$id+$$id from t;
-id+$id+$$id
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-create view $view as select id, $id2 from t;
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-select * from $view;
-id	$id2
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-drop view `$view`;
-create table tpart (
-firstname varchar(25) NOT NULL,
-lastname varchar(25) NOT NULL,
-username varchar(16) NOT NULL,
-email varchar(35),
-`$joined` date not null
-)
-partition by key(`$joined`) partitions 6;
-drop table tpart;
-prepare $stmt from 'select $$id, $id, `$$` from t';
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-execute $stmt;
-$$id	$id	$$
-set @table_name:='t';
-set @sql:=concat('select $$id, $id, `$$` from ', @table_name);
-prepare dynamic_stmt from @sql;
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-execute dynamic_stmt;
-$$id	$id	$$
-create schema $s;
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-create table $s.$t($id int);
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-select $s.$t.$id from $s.$t;
-$id
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-select $s.`$t`.`$id` from $s.`$t`;
-$id
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-drop table `$s`.`$t`;
-drop schema `$s`;
-create procedure $p(in $i int)
-begin
-declare $id1 int;
-select b$$lit$$ into $id1 from t where id = $i;
-end//
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-call $p(3);
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1329	No data - zero rows fetched, selected, or processed
-drop procedure `$p`;
-create function $f($i int) returns int no sql
-begin
-return `$i` * 2;
-end//
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-select $f(2);
-$f(2)
-4
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-drop function `$f`;
-create role $username@$hostname.$domainname.com;
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-drop role $username@$hostname.$domainname.com;
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-set @$myvar = true;
-select count(*) from t where @$myvar;
-count(*)
-0
-select 8.0 $p, 8.4$p, .0$p, 8.$p, 8.p;
-$p	$p	$p	$p	p
-8.0	8.4	0.0	8	8
-Warnings:
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-select .$p;
-ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.$p' at line 1
-show warnings;
-Level	Code	Message
-Warning	1681	'$ as the first character of an unquoted identifier' is deprecated and will be removed in a future release.
-Error	1064	You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.$p' at line 1
-SELECT JSON_EXTRACT('{"id": "3", "$name": "Barney"}', "$.id");
-JSON_EXTRACT('{"id": "3", "$name": "Barney"}', "$.id")
-"3"
-SELECT JSON_EXTRACT('{"id": "3", "$name": "$Barney"}', "$.$name");
-JSON_EXTRACT('{"id": "3", "$name": "$Barney"}', "$.$name")
-"$Barney"
-PROMPT set to '$aa'
-PROMPT set to '$aa$'
-drop table t;
diff --git a/mysql-test/r/opt_hints.result b/mysql-test/r/opt_hints.result
index 9394e4c5d40..c8cb4257348 100644
--- a/mysql-test/r/opt_hints.result
+++ b/mysql-test/r/opt_hints.result
@@ -1526,7 +1526,7 @@ SELECT /*+ NO_ICP(3rd_index) */ 1 FROM t1;
 1
 Warnings:
 Warning	3128	Unresolved name `3rd_index`@`select#1` for NO_ICP hint
-CREATE INDEX `$index` ON t1(j, i);
+CREATE INDEX $index ON t1(j, i);
 SELECT /*+ NO_ICP($index) */ 1 FROM t1;
 1
 Warnings:
diff --git a/mysql-test/suite/innodb/include/default_row_format_tablespace.inc b/mysql-test/suite/innodb/include/default_row_format_tablespace.inc
index 0669676918d..e042a7e4264 100644
--- a/mysql-test/suite/innodb/include/default_row_format_tablespace.inc
+++ b/mysql-test/suite/innodb/include/default_row_format_tablespace.inc
@@ -19,10 +19,10 @@ if ($tablespace == 'tblsp') {
 
 # Check for compressed tables without File_block_size.
 --echo #Create table with tablespace
-eval CREATE TABLESPACE $tablespace ADD DATAFILE '$tablespace.ibd'
+CREATE TABLESPACE $tablespace ADD DATAFILE '$tablespace.ibd'
 ENGINE=InnoDB;
 
-eval CREATE TABLE tab(c1  TEXT, c2 BLOB) TABLESPACE $tablespace;
+CREATE TABLE tab(c1  TEXT, c2 BLOB) TABLESPACE $tablespace;
 
 # Check for compressed tables with File_block_size.
 CREATE TABLESPACE tblsp1 ADD DATAFILE 'tblsp1.ibd' FILE_BLOCK_SIZE=1k
@@ -139,7 +139,7 @@ DROP TABLE tab;
 # Drop only when tablespace is set
 if ($tablespace == 'tblsp') {
 DROP TABLE tab1;
-eval DROP TABLESPACE $tablespace;
+DROP TABLESPACE $tablespace;
 DROP TABLESPACE tblsp1;
 }
 
diff --git a/mysql-test/suite/innodb/r/default_row_format_tablespace.result b/mysql-test/suite/innodb/r/default_row_format_tablespace.result
index 909910ceeca..ac326d56704 100644
--- a/mysql-test/suite/innodb/r/default_row_format_tablespace.result
+++ b/mysql-test/suite/innodb/r/default_row_format_tablespace.result
@@ -72,9 +72,9 @@ SELECT @@innodb_default_row_format;
 @@innodb_default_row_format
 dynamic
 #Create table with tablespace
-CREATE TABLESPACE tblsp ADD DATAFILE 'tblsp.ibd'
+CREATE TABLESPACE $tablespace ADD DATAFILE '$tablespace.ibd'
 ENGINE=InnoDB;
-CREATE TABLE tab(c1  TEXT, c2 BLOB) TABLESPACE tblsp;
+CREATE TABLE tab(c1  TEXT, c2 BLOB) TABLESPACE $tablespace;
 CREATE TABLESPACE tblsp1 ADD DATAFILE 'tblsp1.ibd' FILE_BLOCK_SIZE=1k
 ENGINE=InnoDB;
 CREATE TABLE tab1(c1  TEXT, c2 BLOB) KEY_BLOCK_SIZE=1 TABLESPACE tblsp1;
@@ -88,7 +88,7 @@ mtr/asserted_test_suppressions	mtr/asserted_test_suppressions	33	4	Dynamic	0	Sin
 mtr/global_suppressions	mtr/global_suppressions	33	4	Dynamic	0	Single
 mtr/test_ignored_global_suppressions	mtr/test_ignored_global_suppressions	33	4	Dynamic	0	Single
 mtr/test_suppressions	mtr/test_suppressions	33	4	Dynamic	0	Single
-test/tab	tblsp	161	5	Dynamic	0	General
+test/tab	$tablespace	161	5	Dynamic	0	General
 test/tab1	tblsp1	163	5	Compressed	1024	General
 ALTER TABLE tab ROW_FORMAT=COMPACT;
 === information_schema.innodb_tables  and innodb_tablespaces ===
@@ -97,7 +97,7 @@ mtr/asserted_test_suppressions	mtr/asserted_test_suppressions	33	4	Dynamic	0	Sin
 mtr/global_suppressions	mtr/global_suppressions	33	4	Dynamic	0	Single
 mtr/test_ignored_global_suppressions	mtr/test_ignored_global_suppressions	33	4	Dynamic	0	Single
 mtr/test_suppressions	mtr/test_suppressions	33	4	Dynamic	0	Single
-test/tab	tblsp	129	5	Compact	0	General
+test/tab	$tablespace	129	5	Compact	0	General
 test/tab1	tblsp1	163	5	Compressed	1024	General
 CHECK TABLE tab;
 Table	Op	Msg_type	Msg_text
@@ -109,7 +109,7 @@ mtr/asserted_test_suppressions	mtr/asserted_test_suppressions	33	4	Dynamic	0	Sin
 mtr/global_suppressions	mtr/global_suppressions	33	4	Dynamic	0	Single
 mtr/test_ignored_global_suppressions	mtr/test_ignored_global_suppressions	33	4	Dynamic	0	Single
 mtr/test_suppressions	mtr/test_suppressions	33	4	Dynamic	0	Single
-test/tab	tblsp	161	5	Dynamic	0	General
+test/tab	$tablespace	161	5	Dynamic	0	General
 test/tab1	tblsp1	163	5	Compressed	1024	General
 CHECK TABLE tab;
 Table	Op	Msg_type	Msg_text
@@ -121,13 +121,13 @@ mtr/asserted_test_suppressions	mtr/asserted_test_suppressions	33	4	Dynamic	0	Sin
 mtr/global_suppressions	mtr/global_suppressions	33	4	Dynamic	0	Single
 mtr/test_ignored_global_suppressions	mtr/test_ignored_global_suppressions	33	4	Dynamic	0	Single
 mtr/test_suppressions	mtr/test_suppressions	33	4	Dynamic	0	Single
-test/tab	tblsp	128	5	Redundant	0	General
+test/tab	$tablespace	128	5	Redundant	0	General
 test/tab1	tblsp1	163	5	Compressed	1024	General
 CHECK TABLE tab;
 Table	Op	Msg_type	Msg_text
 test.tab	check	status	OK
 ALTER TABLE tab ROW_FORMAT=COMPRESSED;
-ERROR HY000: InnoDB: Tablespace `tblsp` cannot contain a COMPRESSED table
+ERROR HY000: InnoDB: Tablespace `$tablespace` cannot contain a COMPRESSED table
 ALTER TABLE tab1 ROW_FORMAT=DYNAMIC;
 ERROR HY000: Table storage engine 'InnoDB' does not support the create option 'KEY_BLOCK_SIZE'
 SELECT NAME,ROW_FORMAT FROM INFORMATION_SCHEMA.INNODB_TABLES
@@ -147,14 +147,14 @@ mtr/asserted_test_suppressions	mtr/asserted_test_suppressions	33	4	Dynamic	0	Sin
 mtr/global_suppressions	mtr/global_suppressions	33	4	Dynamic	0	Single
 mtr/test_ignored_global_suppressions	mtr/test_ignored_global_suppressions	33	4	Dynamic	0	Single
 mtr/test_suppressions	mtr/test_suppressions	33	4	Dynamic	0	Single
-test/tab	tblsp	161	5	Dynamic	0	General
+test/tab	$tablespace	161	5	Dynamic	0	General
 test/tab1	tblsp1	163	5	Compressed	1024	General
 CHECK TABLE tab;
 Table	Op	Msg_type	Msg_text
 test.tab	check	status	OK
 DROP TABLE tab;
 DROP TABLE tab1;
-DROP TABLESPACE tblsp;
+DROP TABLESPACE $tablespace;
 DROP TABLESPACE tblsp1;
 SET GLOBAL innodb_file_per_table=Default;
 SELECT @@innodb_default_row_format;
diff --git a/mysql-test/suite/innodb/r/virtual_basic.result b/mysql-test/suite/innodb/r/virtual_basic.result
index e25a2c22da3..0daf85c68f4 100644
--- a/mysql-test/suite/innodb/r/virtual_basic.result
+++ b/mysql-test/suite/innodb/r/virtual_basic.result
@@ -983,13 +983,13 @@ replace into t set a = 'a',b =1;
 drop table t;
 CREATE TABLE t1 (doc JSON);
 ALTER TABLE t1
-ADD COLUMN `$col_varchar` VARCHAR(10) GENERATED ALWAYS AS
+ADD COLUMN $col_varchar VARCHAR(10) GENERATED ALWAYS AS
 (JSON_UNQUOTE(JSON_EXTRACT(doc, '$.col_varchar'))),
-ADD COLUMN `$col_int` INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
+ADD COLUMN $col_int INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
 '$.col_int'));
-ALTER TABLE t1 ADD COLUMN `$col_1` INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
+ALTER TABLE t1 ADD COLUMN $col_1 INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
 '$.col_1'));
-ALTER TABLE t1 DROP COLUMN `$col_varchar`, DROP COLUMN `$col_int`;
+ALTER TABLE t1 DROP COLUMN $col_varchar, DROP COLUMN $col_int;
 DROP TABLE t1;
 CREATE TABLE t (a INT, b INT,  h VARCHAR(10));
 INSERT INTO t VALUES (12, 3,  "ss");
diff --git a/mysql-test/suite/innodb/t/virtual_basic.test b/mysql-test/suite/innodb/t/virtual_basic.test
index e5c35a5349c..713270d43c2 100644
--- a/mysql-test/suite/innodb/t/virtual_basic.test
+++ b/mysql-test/suite/innodb/t/virtual_basic.test
@@ -822,14 +822,14 @@ drop table t;
 # Test on dropping multiple virtual columns
 CREATE TABLE t1 (doc JSON);
 ALTER TABLE t1
-  ADD COLUMN `$col_varchar` VARCHAR(10) GENERATED ALWAYS AS
+  ADD COLUMN $col_varchar VARCHAR(10) GENERATED ALWAYS AS
 (JSON_UNQUOTE(JSON_EXTRACT(doc, '$.col_varchar'))),
-  ADD COLUMN `$col_int` INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
+  ADD COLUMN $col_int INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
 '$.col_int'));
-ALTER TABLE t1 ADD COLUMN `$col_1` INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
+ALTER TABLE t1 ADD COLUMN $col_1 INT GENERATED ALWAYS AS (JSON_EXTRACT(doc,
 '$.col_1'));
 
-ALTER TABLE t1 DROP COLUMN `$col_varchar`, DROP COLUMN `$col_int`;
+ALTER TABLE t1 DROP COLUMN $col_varchar, DROP COLUMN $col_int;
 
 DROP TABLE t1;
 
diff --git a/mysql-test/suite/x/r/admin_create_index_spatial.result b/mysql-test/suite/x/r/admin_create_index_spatial.result
index 7101a9390a4..38b18b16cca 100644
--- a/mysql-test/suite/x/r/admin_create_index_spatial.result
+++ b/mysql-test/suite/x/r/admin_create_index_spatial.result
@@ -152,7 +152,7 @@ Got expected error (code 0)
 
 1 rows affected
 Got expected error (code 0)
-doc	_id	ST_ASGEOJSON(`$ix_gj_r_9BDE81F857CBD7E27CAED548ED36F57CE4307F0B`)
+doc	_id	ST_ASGEOJSON($ix_gj_r_9BDE81F857CBD7E27CAED548ED36F57CE4307F0B)
 {"_id": "five", "first": {"type": "MultiLineString", "coordinates": [[[10, 10], [20, 20], [10, 40]], [[40, 40], [30, 30], [40, 20], [30, 10]]]}}	five	{"type": "MultiLineString", "coordinates": [[[10.0, 10.0], [20.0, 20.0], [10.0, 40.0]], [[40.0, 40.0], [30.0, 30.0], [40.0, 20.0], [30.0, 10.0]]]}
 {"_id": "four", "first": {"type": "MultiPoint", "coordinates": [[10, 40], [40, 30], [20, 20], [30, 10]]}}	four	{"type": "MultiPoint", "coordinates": [[10.0, 40.0], [40.0, 30.0], [20.0, 20.0], [30.0, 10.0]]}
 {"_id": "one", "first": {"type": "Point", "coordinates": [10, 11]}}	one	{"type": "Point", "coordinates": [10.0, 11.0]}
diff --git a/mysql-test/suite/x/r/create_index_crud.result b/mysql-test/suite/x/r/create_index_crud.result
index ef904149893..f5a606026b4 100644
--- a/mysql-test/suite/x/r/create_index_crud.result
+++ b/mysql-test/suite/x/r/create_index_crud.result
@@ -71,9 +71,9 @@ doc	_id	_json_schema	$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9	$ix_i_1C
 {"_id": 4, "col1": "val4", "col2": 102}	4	{"type": "object"}	val4	102
 {"_id": 5, "col1": "val5"}	5	{"type": "object"}	val5	null
 0 rows affected
-RUN SELECT _id,doc, CONCAT("Prefix",`$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9`) , `$ix_i_1C70785A292B9A2762EFA186DFCFB4F03C660E7F`
+RUN SELECT _id,doc, CONCAT("Prefix",$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9) , $ix_i_1C70785A292B9A2762EFA186DFCFB4F03C660E7F
    FROM xplugintest.table2
-_id	doc	CONCAT("Prefix",`$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9`)	$ix_i_1C70785A292B9A2762EFA186DFCFB4F03C660E7F
+_id	doc	CONCAT("Prefix",$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9)	$ix_i_1C70785A292B9A2762EFA186DFCFB4F03C660E7F
 0	{"_id": 0, "col1": "01234567890123456789"}	Prefix01234567890123456789	null
 1	{"_id": 1, "col1": "val1", "col2": 101}	Prefixval1	101
 4	{"_id": 4, "col1": "val4", "col2": 102}	Prefixval4	102
@@ -89,7 +89,7 @@ Mysqlx.Error {
   sql_state: "42000"
 }
 
-RUN ALTER TABLE xplugintest.table2 ADD COLUMN `$ix_t13_bf29f74d5ecec695774cb5b3f1ff979e7643bf36` TEXT
+RUN ALTER TABLE xplugintest.table2 ADD COLUMN $ix_t13_bf29f74d5ecec695774cb5b3f1ff979e7643bf36 TEXT
 
 0 rows affected
 Records: 0  Duplicates: 0  Warnings: 0
diff --git a/mysql-test/suite/x/r/performance_schema_stmt.result b/mysql-test/suite/x/r/performance_schema_stmt.result
index 9fd91f7c930..8b6e481768e 100644
--- a/mysql-test/suite/x/r/performance_schema_stmt.result
+++ b/mysql-test/suite/x/r/performance_schema_stmt.result
@@ -104,7 +104,7 @@ CREATE TABLE `xtest`.`test2` (doc JSON,_id VARBINARY(32) GENERATED ALWAYS AS (JS
 SELECT @@sql_mode
 SELECT COUNT(*) AS cnt,COUNT(CASE WHEN (column_name = 'doc' AND data_type = 'json') THEN 1 ELSE NULL END) AS doc,COUNT(CASE WHEN (column_name = '_id' AND generation_expression RLIKE '^json_unquote\\(json_extract\\(`doc`,(_[[:alnum:]]+)?\\\\''\\$\\._id\\\\''\\)\\)$') THEN 1 ELSE NULL END) AS id,COUNT(CASE WHEN (column_name != '_id' AND column_name != 'doc' AND column_name != '_json_schema' AND generation_expression RLIKE 'json_extract\\(`doc`,(_[[:alnum:]]+)?\\\\''\\$((\\*{2})?(\\[([[:digit:]]+|\\*)\\]|\\.([[:alpha:]_\\$][[:alnum:]_\\$]*|\\*|\\".*\\"|`.*`)))*\\\\''\\)') THEN 1 ELSE NULL END) AS gen, COUNT(CASE WHEN (column_name = '_json_schema') THEN 1 ELSE NULL END) AS validation_schema FROM information_schema.columns WHERE table_name = 'test2' AND table_schema = 'xtest'
 SELECT @@lower_case_table_names
-ALTER TABLE `xtest`.`test2` MODIFY COLUMN _json_schema JSON GENERATED ALWAYS AS ('{"type":"object"}') VIRTUAL, ALTER CHECK `$val_strict_7CEB3FDE5F7A9C4CE5FBE610D7D8EDA62EBE5F4E` NOT ENFORCED
+ALTER TABLE `xtest`.`test2` MODIFY COLUMN _json_schema JSON GENERATED ALWAYS AS ('{"type":"object"}') VIRTUAL, ALTER CHECK $val_strict_7CEB3FDE5F7A9C4CE5FBE610D7D8EDA62EBE5F4E NOT ENFORCED
 0 rows affected
 ######### get validation error when working with collections #########
 
diff --git a/mysql-test/suite/x/t/admin_create_index_spatial.test b/mysql-test/suite/x/t/admin_create_index_spatial.test
index d85e3930db7..60beb98cc73 100644
--- a/mysql-test/suite/x/t/admin_create_index_spatial.test
+++ b/mysql-test/suite/x/t/admin_create_index_spatial.test
@@ -102,7 +102,7 @@ SHOW STATUS LIKE 'Mysqlx_stmt_execute_mysqlx';
 -->callmacro Insert	spatial1	'{"_id": "five", "first":{"type": "MultiLineString", "coordinates": [[[10, 10], [20, 20], [10, 40]], [[40, 40], [30, 30], [40, 20], [30, 10]]]}}'	ER_SUCCESS
 -->callmacro Insert	spatial1	'{"_id": "six", "first":{"type": "MultiPolygon", "coordinates": [[[[40, 40], [20, 45], [45, 30], [40, 40]]], [[[20, 35], [10, 30], [10, 10], [30, 5], [45, 20], [20, 35]]]]}}'	ER_SUCCESS
 -->callmacro Insert	spatial1	'{"_id": "seven", "first":{"type": "GeometryCollection", "geometries": [{"type": "GeometryCollection", "geometries": [{"type": "Point", "coordinates": [10, 20]}]}]}}'	ER_SUCCESS
--->stmtsql SELECT doc,_id,ST_ASGEOJSON(`$ix_gj_r_9BDE81F857CBD7E27CAED548ED36F57CE4307F0B`) FROM xtest.spatial1;
+-->stmtsql SELECT doc,_id,ST_ASGEOJSON($ix_gj_r_9BDE81F857CBD7E27CAED548ED36F57CE4307F0B) FROM xtest.spatial1;
 -->recvresult
 -->echo Using of index give an unexpected result and it caused by another bug
 -->callmacro Show_use_of_index	spatial1	MBRContains(st_geomfromgeojson(doc->'$.first',1,4326),st_geomfromtext('point(10 11)',4326))
diff --git a/mysql-test/suite/x/t/create_index_crud.test b/mysql-test/suite/x/t/create_index_crud.test
index 502622973d4..05a545a13bf 100644
--- a/mysql-test/suite/x/t/create_index_crud.test
+++ b/mysql-test/suite/x/t/create_index_crud.test
@@ -107,7 +107,7 @@ INSERT INTO xplugintest.table2(doc) VALUES('{"col1":"val4","col2":102,"_id":4}')
 #-- " null value allowed for col2"
 INSERT INTO xplugintest.table2(doc) VALUES('{"col1":"val5","_id":5}');
 SELECT * FROM xplugintest.table2;
-SELECT _id,doc, CONCAT("Prefix",`$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9`) , `$ix_i_1C70785A292B9A2762EFA186DFCFB4F03C660E7F`
+SELECT _id,doc, CONCAT("Prefix",$ix_t13_r_5E11219941D8F091BF6F252A48E0EEAA9D734FF9) , $ix_i_1C70785A292B9A2762EFA186DFCFB4F03C660E7F
    FROM xplugintest.table2;
 #-- "Error as virual column data type mismatch while inserting into JSON doc"
 -->endsql
@@ -121,7 +121,7 @@ INSERT INTO xplugintest.table2(doc) VALUES('{"col1":"val6","col2":"non_int_val",
 -->recv
 
 -->sql
-ALTER TABLE xplugintest.table2 ADD COLUMN `$ix_t13_bf29f74d5ecec695774cb5b3f1ff979e7643bf36` TEXT;
+ALTER TABLE xplugintest.table2 ADD COLUMN $ix_t13_bf29f74d5ecec695774cb5b3f1ff979e7643bf36 TEXT;
 -->endsql
 #-- "Column name exits - reuse"
 -->stmtadmin create_collection_index	{"schema":"xplugintest", "collection":"table2", "name":"col3_index", "unique":false, "fields":{"field":"$.col3", "type":"TEXT(13)", "required":false}}
diff --git a/mysql-test/t/create.test b/mysql-test/t/create.test
index a0ff98cd675..daacfaf4b07 100644
--- a/mysql-test/t/create.test
+++ b/mysql-test/t/create.test
@@ -84,9 +84,9 @@ drop table t1;
 # Test that we get warning for this
 drop database if exists mysqltest;
 create database mysqltest;
-create table mysqltest.`$test1` (a$1 int, `$b` int, c$ int);
-insert into mysqltest.`$test1` values (1,2,3);
-select a$1, `$b`, c$ from mysqltest.`$test1`;
+create table mysqltest.$test1 (a$1 int, $b int, c$ int);
+insert into mysqltest.$test1 values (1,2,3);
+select a$1, $b, c$ from mysqltest.$test1;
 create table mysqltest.test2$ (a int);
 drop table mysqltest.test2$;
 drop database mysqltest;
diff --git a/mysql-test/t/dollar_identifier.test b/mysql-test/t/dollar_identifier.test
deleted file mode 100644
index 0a420d84146..00000000000
--- a/mysql-test/t/dollar_identifier.test
+++ /dev/null
@@ -1,101 +0,0 @@
-#------------------------------------------------------------------------------
-# WL#15422: Deprecate starting unquoted identifiers with a dollar sign
-#------------------------------------------------------------------------------
-
-# Table names and columns.
-create table $t(id int);
-drop table $t;
-create table t(id int, $id int, $id2 int, $$id int, $ int, $1 int,$$$ int,
-               id$$$ int, 1$ int, `$$` int, _$ int, b$$lit$$ int);
-
-# Multiple $ should also warn. Quoted identifiers should not give warning.
-select `$1`, $$$,$$id, '$someli$teral' from t where t.`$id` = 0;
-SET sql_mode = sys.LIST_ADD(@@sql_mode, 'ANSI_QUOTES');
-select "$id2", "$$$" from t where t."$id" = 0;
-SET sql_mode = sys.LIST_DROP(@@sql_mode, 'ANSI_QUOTES');
-
-# This should not give any warning.
-select * from t where t.`$id` = 0 or `$id2` = 0 or b$$lit$$ = 0;
-
-# $ following a non-whitespace character.
-select id+$id+$$id from t;
-
-# Views.
-create view $view as select id, $id2 from t;
-# When selecting from a view, warning should be given only for the main query,
-# not for the view definition query.
-select * from $view;
-drop view `$view`;
-
-# Bug #34785775 : Partitions with partition key having $.
-# Should not generate a warning. The internally generated SQL should quote the
-# partition key name.
-create table tpart (
-    firstname varchar(25) NOT NULL,
-    lastname varchar(25) NOT NULL,
-    username varchar(16) NOT NULL,
-    email varchar(35),
-    `$joined` date not null
-)
-partition by key(`$joined`) partitions 6;
-drop table tpart;
-
-# Even though prepared statement text is in quoted string or in a dynamic sql,
-# occurences of $ident should be identified.
-prepare $stmt from 'select $$id, $id, `$$` from t';
-execute $stmt;
-set @table_name:='t';
-set @sql:=concat('select $$id, $id, `$$` from ', @table_name);
-prepare dynamic_stmt from @sql;
-execute dynamic_stmt;
-
-# Should work across multiple object name qualifications.
-create schema $s;
-create table $s.$t($id int);
-select $s.$t.$id from $s.$t;
-select $s.`$t`.`$id` from $s.`$t`;
-drop table `$s`.`$t`;
-drop schema `$s`;
-
-# Procedures and functions: Warnings should be caught for procedure name,
-# arguments and local variables.
-delimiter //;
-create procedure $p(in $i int)
-begin
-  declare $id1 int;
-  select b$$lit$$ into $id1 from t where id = $i;
-end//
-delimiter ;//
-call $p(3);
-drop procedure `$p`;
-delimiter //;
-create function $f($i int) returns int no sql
-begin
-  return `$i` * 2;
-end//
-delimiter ;//
-select $f(2);
-drop function `$f`;
-
-# Words prefixed with @ are not the usual identifiers. They can start with $.
-create role $username@$hostname.$domainname.com;
-drop role $username@$hostname.$domainname.com;
-set @$myvar = true;
-select count(*) from t where @$myvar;
-
-# No space between a float and $ident; and alias starting with $.
-select 8.0 $p, 8.4$p, .0$p, 8.$p, 8.p;
-# This should error out, but a warning should still be generated.
---error ER_PARSE_ERROR
-select .$p;
-show warnings;
-
-# Quoted JSON path $expressions should not emit warning.
-SELECT JSON_EXTRACT('{"id": "3", "$name": "Barney"}', "$.id");
-SELECT JSON_EXTRACT('{"id": "3", "$name": "$Barney"}', "$.$name");
-
-# Should not conflict with client-side commands ('\' escape char is for the shell).
---exec $MYSQL test -e "prompt \$aa"
---exec $MYSQL test -e "prompt \$aa\$"
-
-drop table t;
diff --git a/mysql-test/t/opt_hints.test b/mysql-test/t/opt_hints.test
index 2e8b82d59bd..1dcaaa591d7 100644
--- a/mysql-test/t/opt_hints.test
+++ b/mysql-test/t/opt_hints.test
@@ -622,7 +622,7 @@ EXPLAIN DELETE /*+ test */ FROM t1 WHERE i = 10;
 CREATE INDEX 3rd_index ON t1(i, j);
 SELECT /*+ NO_ICP(3rd_index) */ 1 FROM t1;
 
-CREATE INDEX `$index` ON t1(j, i);
+CREATE INDEX $index ON t1(j, i);
 SELECT /*+ NO_ICP($index) */ 1 FROM t1;
 
 CREATE TABLE ` quoted name тест` (i INT);
diff --git a/mysys/sql_chars.cc b/mysys/sql_chars.cc
index 62002de5347..571df6c29ea 100644
--- a/mysys/sql_chars.cc
+++ b/mysys/sql_chars.cc
@@ -126,8 +126,5 @@ bool init_state_maps(CHARSET_INFO *cs) {
   state_map[(uchar)'b'] = state_map[(uchar)'B'] = MY_LEX_IDENT_OR_BIN;
   state_map[(uchar)'n'] = state_map[(uchar)'N'] = MY_LEX_IDENT_OR_NCHAR;
 
-  /* Special handling for identifiers that start with dollar */
-  state_map[(uchar)'$'] = MY_LEX_IDENT_OR_DOLLAR_QUOTE;
-
   return false;
 }
diff --git a/plugin/x/src/admin_cmd_collection_handler.cc b/plugin/x/src/admin_cmd_collection_handler.cc
index ec565bf69f7..987dec80410 100644
--- a/plugin/x/src/admin_cmd_collection_handler.cc
+++ b/plugin/x/src/admin_cmd_collection_handler.cc
@@ -271,7 +271,7 @@ ngs::Error_code Admin_command_collection_handler::modify_collection_validation(
     qb.put(" MODIFY COLUMN _json_schema JSON GENERATED ALWAYS AS (")
         .quote_json_string(schema_string)
         .put(") VIRTUAL, ALTER CHECK ")
-        .quote_identifier(constraint_name)
+        .put(constraint_name)
         .put(is_enforced ? " ENFORCED" : " NOT ENFORCED");
   else if (validation.fld(0).key() == "schema")
     qb.put(" MODIFY COLUMN _json_schema JSON GENERATED ALWAYS AS (")
@@ -279,7 +279,7 @@ ngs::Error_code Admin_command_collection_handler::modify_collection_validation(
         .put(") VIRTUAL");
   else if (validation.fld(0).key() == "level")
     qb.put(" ALTER CHECK ")
-        .quote_identifier(constraint_name)
+        .put(constraint_name)
         .put(is_enforced ? " ENFORCED" : " NOT ENFORCED");
 
   const ngs::PFS_string &tmp(qb.get());
@@ -311,7 +311,7 @@ ngs::Error_code Admin_command_collection_handler::modify_collection_validation(
           .put(" ADD COLUMN _json_schema JSON GENERATED ALWAYS AS (")
           .quote_json_string(new_schema)
           .put(") VIRTUAL, ADD CONSTRAINT ")
-          .quote_identifier(constraint_name)
+          .put(constraint_name)
           .put(" CHECK (JSON_SCHEMA_VALID(_json_schema, doc)) ")
           .put(is_enforced ? "ENFORCED" : "NOT ENFORCED");
 
diff --git a/router/src/routing/src/sql_lexer.cc b/router/src/routing/src/sql_lexer.cc
index fc6b1f3e831..6c01f213ea2 100644
--- a/router/src/routing/src/sql_lexer.cc
+++ b/router/src/routing/src/sql_lexer.cc
@@ -654,11 +654,6 @@ static int lex_one_token(Lexer_yystype *yylval, THD *thd) {
         yylval->lex_str.length = lip->yytoklen;
         return (NCHAR_STRING);
 
-      case MY_LEX_IDENT_OR_DOLLAR_QUOTE:
-        state = MY_LEX_IDENT;
-        push_deprecated_warn_no_replacement(
-            lip->m_thd, "$ as the first character of an unquoted identifier");
-        break;
       case MY_LEX_IDENT_OR_HEX:
         if (lip->yyPeek() == '\'') {  // Found x'hex-number'
           state = MY_LEX_HEX_NUMBER;
@@ -776,16 +771,10 @@ static int lex_one_token(Lexer_yystype *yylval, THD *thd) {
         yylval->lex_str.str = const_cast<char *>(lip->get_ptr());
         yylval->lex_str.length = 1;
         c = lip->yyGet();  // should be '.'
-        if (uchar next_c = lip->yyPeek(); ident_map[next_c]) {
-          lip->next_state =
-              MY_LEX_IDENT_START;  // Next is an ident (not a keyword)
-          if (next_c == '$')       // We got .$ident
-            push_deprecated_warn_no_replacement(
-                lip->m_thd,
-                "$ as the first character of an unquoted identifier");
-        } else  // Probably ` or "
+        lip->next_state =
+            MY_LEX_IDENT_START;         // Next is an ident (not a keyword)
+        if (!ident_map[lip->yyPeek()])  // Probably ` or "
           lip->next_state = MY_LEX_START;
-
         return ((int)c);
 
       case MY_LEX_NUMBER_IDENT:  // number or ident which num-start
diff --git a/router/src/routing/src/sql_lexer_error.h b/router/src/routing/src/sql_lexer_error.h
index 76842e5a8da..fe2935d4dbc 100644
--- a/router/src/routing/src/sql_lexer_error.h
+++ b/router/src/routing/src/sql_lexer_error.h
@@ -41,7 +41,4 @@ inline void warn_on_deprecated_collation(THD * /* thd */,
 inline void push_deprecated_warn(THD * /* thd */, const char * /* old_syntax */,
                                  const char * /* new_syntax */) {}
 
-inline void push_deprecated_warn_no_replacement(THD * /* thd */,
-                                                const char * /* old_syntax */) {
-}
 #endif
diff --git a/sql/sql_lex.cc b/sql/sql_lex.cc
index e28a6735e36..c1155117393 100644
--- a/sql/sql_lex.cc
+++ b/sql/sql_lex.cc
@@ -1441,12 +1441,6 @@ static int lex_one_token(Lexer_yystype *yylval, THD *thd) {
         yylval->lex_str.length = lip->yytoklen;
         return (NCHAR_STRING);
 
-      case MY_LEX_IDENT_OR_DOLLAR_QUOTE:
-        state = MY_LEX_IDENT;
-        push_deprecated_warn_no_replacement(
-            lip->m_thd, "$ as the first character of an unquoted identifier");
-        break;
-
       case MY_LEX_IDENT_OR_HEX:
         if (lip->yyPeek() == '\'') {  // Found x'hex-number'
           state = MY_LEX_HEX_NUMBER;
@@ -1564,16 +1558,10 @@ static int lex_one_token(Lexer_yystype *yylval, THD *thd) {
         yylval->lex_str.str = const_cast<char *>(lip->get_ptr());
         yylval->lex_str.length = 1;
         c = lip->yyGet();  // should be '.'
-        if (uchar next_c = lip->yyPeek(); ident_map[next_c]) {
-          lip->next_state =
-              MY_LEX_IDENT_START;  // Next is an ident (not a keyword)
-          if (next_c == '$')       // We got .$ident
-            push_deprecated_warn_no_replacement(
-                lip->m_thd,
-                "$ as the first character of an unquoted identifier");
-        } else  // Probably ` or "
+        lip->next_state =
+            MY_LEX_IDENT_START;         // Next is an ident (not a keyword)
+        if (!ident_map[lip->yyPeek()])  // Probably ` or "
           lip->next_state = MY_LEX_START;
-
         return ((int)c);
 
       case MY_LEX_NUMBER_IDENT:  // number or ident which num-start
diff --git a/sql/sql_show.cc b/sql/sql_show.cc
index 730cb0c936a..beddaa163b2 100644
--- a/sql/sql_show.cc
+++ b/sql/sql_show.cc
@@ -1428,9 +1428,6 @@ static const char *require_quotes(const char *name, size_t name_length) {
   bool pure_digit = true;
   const char *end = name + name_length;
 
-  // Identifier starting with '$' is deprecated.
-  if (name_length && static_cast<uchar>(*name) == '$') return name;
-
   for (; name < end; name++) {
     uchar chr = (uchar)*name;
     uint length = my_mbcharlen(system_charset_info, chr);
diff --git a/unittest/gunit/xplugin/xpl/admin_modify_collection_options_t.cc b/unittest/gunit/xplugin/xpl/admin_modify_collection_options_t.cc
index 9530e4d7746..8503a2520c8 100644
--- a/unittest/gunit/xplugin/xpl/admin_modify_collection_options_t.cc
+++ b/unittest/gunit/xplugin/xpl/admin_modify_collection_options_t.cc
@@ -120,7 +120,7 @@ TEST_F(Admin_cmd_modify_collection_options_test, validation_level_set_to_off) {
               execute(StrEq("SELECT @@lower_case_table_names"), _, _));
   EXPECT_CALL(mock_data_context,
               execute(MatchesRegex("ALTER TABLE `xtest`.`test_coll` ALTER "
-                                   "CHECK `.val_strict.*` NOT ENFORCED"),
+                                   "CHECK .val_strict.* NOT ENFORCED"),
                       _, _));
 
   ASSERT_ERROR_CODE(ER_X_SUCCESS,
@@ -138,7 +138,7 @@ TEST_P(Admin_cmd_modify_validation_level_strict,
               execute(StrEq("SELECT @@lower_case_table_names"), _, _));
   EXPECT_CALL(mock_data_context,
               execute(MatchesRegex("ALTER TABLE `xtest`.`test_coll` ALTER "
-                                   "CHECK `.val_strict.*` ENFORCED"),
+                                   "CHECK .val_strict.* ENFORCED"),
                       _, _));
 
   ASSERT_ERROR_CODE(ER_X_SUCCESS,
@@ -222,7 +222,7 @@ TEST_P(Admin_cmd_modify_validation_schema_with_level_off,
       mock_data_context,
       execute(MatchesRegex("ALTER TABLE `xtest`.`test_coll` MODIFY COLUMN "
                            "_json_schema JSON GENERATED ALWAYS AS .* VIRTUAL, "
-                           "ALTER CHECK `.val_strict_.*` NOT ENFORCED"),
+                           "ALTER CHECK .val_strict_.* NOT ENFORCED"),
               _, _));
 
   ASSERT_ERROR_CODE(ER_X_SUCCESS,
@@ -251,7 +251,7 @@ TEST_P(Admin_cmd_modify_validation_schema_with_level_strict,
       mock_data_context,
       execute(MatchesRegex("ALTER TABLE `xtest`.`test_coll` MODIFY COLUMN "
                            "_json_schema JSON GENERATED ALWAYS AS .* VIRTUAL, "
-                           "ALTER CHECK `.val_strict_.*` ENFORCED"),
+                           "ALTER CHECK .val_strict_.* ENFORCED"),
               _, _));
 
   ASSERT_ERROR_CODE(ER_X_SUCCESS,
-- 
2.37.2

